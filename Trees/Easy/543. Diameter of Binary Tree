/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int helper(TreeNode *root,int &mx)
    {
      if(root == nullptr) return 0;
      
      int left = helper(root ->left,mx);
      int right = helper(root -> right,mx);
      
      if(mx < left + right) mx = left + right;
      return 1 + max(left,right);
    }
    int diameterOfBinaryTree(TreeNode* root)
    {
        int mx = 0;
        helper(root,mx);
        return mx;
    }
};
