/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
  void helper(queue<pair<TreeNode*,int>>&q,TreeNode* root,int level)
  {
    if(!root) return;
    if(q.size() == level) q.push({root,level});
    
    helper(q,root -> right,level+1);
    helper(q,root->left,level+1);
  }
    vector<int> rightSideView(TreeNode* root)
    {
      vector<int>ans;
      queue<pair<TreeNode*,int>>q;
      helper(q,root,0);
      while(q.size())
      {
        TreeNode* node = q.front().first;
        q.pop();
        ans.push_back(node -> val);
      }
      return ans;
    }
};
