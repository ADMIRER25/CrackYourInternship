/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
#include<bits/stdc++.h>
class Solution {
public:
    int kthSmallest(TreeNode* root, int k) 
    {
      int count = 0;
      int ans=0;
      TreeNode* curr = root,*prev;
      while(curr)
      {
        if(curr -> left) 
        {
          prev = curr -> left;
          while(prev -> right && prev -> right != curr)
          {
            prev = prev -> right;
          }
          if(!prev -> right)
          {
            prev -> right = curr;
            curr = curr-> left;
          }
          else
          {
            prev -> right = NULL;
            count = count + 1;
            if(count == k)
            {
              ans = curr -> val;
            }
            curr = curr-> right;
          }
        }
        else 
        {
         count = count + 1;
           if(count == k)
            {
              ans = curr -> val;
            }
         curr = curr -> right;
        }
      }
      return ans;
    }
};
