/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root)
    {
      vector<vector<int>> ans;
      queue<TreeNode*> q;
      if(root == nullptr) return ans;
      q.push(root);
      while(!q.empty())
      {
        vector<int>level;
        int size = q.size();
        for(int i = 0; i < size; i++)
        {
          TreeNode *temp = q.front();;
          q.pop();
          level.push_back(temp->val);
          if(temp -> left != nullptr) q.push(temp -> left);
          if(temp -> right != nullptr) q.push(temp -> right);
        
        }
        ans.push_back(level);
      }
      return ans;
        
    }
};
