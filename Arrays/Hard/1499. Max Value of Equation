T.C:O(nlogn)
S.C:O(n)
-----------------------------------------
class Solution {
public:
    // i < j so xi < xj 
    // yi + yj + abs(xi-xj) = yi + yj + xj - xi = xj + yj + (yi- xi)
    // now for a j xj + yj part is constant but yi-xi part is vriable ans we have to maximize it so we can use a max heap for this purpose
    int findMaxValueOfEquation(vector<vector<int>>& points, int k)
    {
        priority_queue<pair<int,int>>pq; //<(yi-xi),xi>
        int ans = INT_MIN;
        for(int i = 0; i < points.size();i++)
        {
           while(!pq.empty() && points[i][0]-pq.top().second > k) pq.pop();

           if(!pq.empty()) 
           {
              ans = max(ans,pq.top().first + points[i][1] + points[i][0]);
           }
           pq.push({points[i][1] - points[i][0],points[i][0]});
        }
        return ans;
        
    }
};
