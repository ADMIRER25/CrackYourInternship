T.C: O(N)
S.C: O(N)
---------------------------------------
class Solution {
public:
    int subarraySum(vector<int>& nums, int k)
    {
       //***if x is the prefix sum then if inside it if one subarray sum = k then another one subarray sum = x - k to form the whole x , so if (x-k)+k = x ,so if there are x-k present for one x the we can say that sum k is present.**

       int presum = 0;
       int count = 0;
       unordered_map<int,int>mp; // <presum,freq>

       mp[0] = 1;
       int n = nums.size();
       for(int i = 0; i < n;i++)
       {
           presum += nums[i];
           count += mp[presum - k];
           mp[presum]++;
       }
       return count;
    }
};
